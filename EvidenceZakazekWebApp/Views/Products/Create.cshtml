@model EvidenceZakazekWebApp.ViewModels.ProductFormViewModel
@{
    ViewBag.Title = "Vytvořit produkt";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("Create", "Products"))
{
    <p class="alert alert-info">Věchny pole jsou <strong>povinné</strong>.</p>
    @Html.AntiForgeryToken();
    <div class="form-group">
        @Html.LabelFor(m => m.Name)
        @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Name)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.OrderNumber)
        @Html.TextBoxFor(m => m.OrderNumber, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.OrderNumber)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.TypeName)
        @Html.TextBoxFor(m => m.TypeName, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.TypeName)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Category)
        @Html.DropDownListFor(m => m.Category, new SelectList(Model.Categories, "Id", "Name"), "", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Category)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Price)
        <div class="input-group">
            @*
                change default from 0 to "" https://stackoverflow.com/a/18029080
                override default validation message https://stackoverflow.com/a/16081262
            *@
            @Html.TextBoxFor(m => m.Price,
            new { Value = "", @class = "form-control", data_val_number = "Pole Cena musí obsahovat číslo." })
            <span class="input-group-addon">Kč</span>
        </div>
        @Html.ValidationMessageFor(m => m.Price)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Supplier)
        @Html.DropDownListFor(m => m.Supplier, new SelectList(Model.Suppliers, "Id", "Name"), "", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Supplier)
    </div>

    <button type="submit" class="btn btn-primary">Save</button>
}

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        // decimal separator override
        // dot. => comma,
        //http://blog.rebuildall.net/2011/03/02/jQuery_validate_and_the_comma_decimal_separator
        $(document).ready(function () {
            $.validator.methods.range = function (value, element, param) {
                var globalizedValue = value.replace(",", ".");
                return this.optional(element) || (globalizedValue >= param[0] && globalizedValue <= param[1]);
            }

            $.validator.methods.number = function (value, element) {
                return this.optional(element) || /^-?(?:\d+|\d{1,3}(?:[\s\.,]\d{3})+)(?:[\.,]\d+)?$/.test(value);
            }
        });
    </script>
}

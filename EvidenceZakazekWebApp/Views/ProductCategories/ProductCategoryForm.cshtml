@model EvidenceZakazekWebApp.ViewModels.ProductCategoryFormViewModel
@using EvidenceZakazekWebApp.Helpers.FlashMessagesHelper
@using MyToolkit.Html
@{
    ViewBag.Title = Model.Heading;
}

<h2>@ViewBag.Title</h2>

@Html.RenderFlashMessages()

@using (Html.BeginForm(Model.Action, "ProductCategories", FormMethod.Post, new { @class = "productCategories" }))
{
    @Html.AntiForgeryToken();
    @Html.HiddenFor(m => m.Id);
    <div class="form-group">
        @Html.LabelFor(m => m.Name)
        @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Name)
    </div>

    <div class="form-group properties">
        @Html.LabelFor(m => m.PropertyDefinitions, htmlAttributes: new { @class = "control-label" })
        <div class="">
            @* solved by https://blog.rsuter.com/asp-net-mvc-how-to-implement-an-edit-form-for-an-entity-with-a-sortable-child-collection/*@
            @Html.CollectionEditorFor(m =>
                m.PropertyDefinitions,
                "/Views/PropertyDefinition/PropertyDefinitionForm.cshtml",  // View
                "/PropertyDefinitions/GetNewPropertyDefinitionForm",  // Get Action
                "Přidej vlastnost",
                new { @class = "btn btn-default" })

            @Html.ValidationMessageFor(m => m.PropertyDefinitions)
        </div>
    </div>

    <button type="submit" class="btn btn-primary">Save</button>
}

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
}
